{"version":3,"sources":["components/Container/Container.js","components/SocialProfile/SocialProfile.styled.jsx","components/SocialProfile/SocialProfile.js","components/StatisticsList/StatisticsList.styled.jsx","components/StatisticsList/StatisticsList.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.js","components/Transaction/TransactionHistory.styled.jsx","components/Transaction/TransactionHistory.js","components/App/App.js","index.js","constants/theme.jsx"],"names":["Container","children","className","ProfileWrapper","styled","div","props","theme","colors","granat","Description","Avatar","img","Name","p","Tag","grey","Location","Stats","ul","Item","li","blue","greyBorder","Label","span","yellow","Quantity","black","Profile","name","tag","location","avatar","followers","views","likes","src","alt","width","height","styles","StatList","Percentage","StatisticsList","stats","map","id","label","percentage","StatisticSection","section","Wrapper","Title","h2","Statistics","title","FriendWrapper","RosterFriends","Status","isOnline","green","red","FriendList","friends","defaultProps","Transaction","table","Topic","th","Tbody","tbody","tr","Cell","td","TransactionHistory","items","type","amount","currency","style","color","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","blueviolet","document","getElementById"],"mappings":"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","file":"static/js/main.435ed63b.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Container = ({ children }) => (\n  <div className=\"container\">{children}</div>\n);\n\nexport default Container;\n","import styled from '@emotion/styled'\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  width: 320px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color:  ${props => `${props.theme.colors.granat}`};\r\n  background-clip: border-box;\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 16px;\r\n`;\r\nexport const Avatar = styled.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-weight: bold;\r\n  font-size: 19px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n  color: ${props => `${props.theme.colors.grey}`};\r\n  margin-bottom: 10px;\r\n`;\r\nexport const Location = styled.p`\r\n  color:  ${props => `${props.theme.colors.grey}`};\r\n  margin-bottom: 10px;\r\n`;\r\nexport const Stats = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  padding: 10px;\r\n  background-color:  ${props => `${props.theme.colors.blue}`};\r\n  width: calc(100% / 3);\r\n  border: 1px solid  ${props => `${props.theme.colors.greyBorder}`};\r\n  border-radius: 0.25rem;\r\n`;\r\nexport const Label = styled.span`\r\n   color:  ${props => `${props.theme.colors.yellow}`};\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n  font-weight: bold;\r\n  color:  ${props => `${props.theme.colors.black}`};\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SocialProfile.module.css';\nimport { ProfileWrapper, Description, Avatar, Name, Tag, Location, Stats, Item, Label, Quantity} from './SocialProfile.styled'\n\nconst Profile = ({ name, tag, location, avatar, followers, views, likes }) => (\n  <ProfileWrapper>\n    <Description>\n      <Avatar\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        width=\"150\"\n        height=\"150\"\n      />\n      <Name>{name}</Name>\n      <Tag>@{tag}</Tag>\n      <Location className={styles.location}>{location}</Location>\n    </Description>\n\n    <Stats>\n      <Item>\n        <Label>Followers</Label>\n        <Quantity>{followers}</Quantity>\n      </Item>\n      <Item>\n        <Label>Views</Label>\n        <Quantity>{views}</Quantity>\n      </Item>\n      <Item>\n        <Label>Likes</Label>\n        <Quantity>{likes}</Quantity>\n      </Item>\n    </Stats>\n  </ProfileWrapper>\n);\n\n// const Profile = ({ name, tag, location, avatar, followers, views, likes }) => (\n//   <div className={styles.profile}>\n//     <div className={styles.description}>\n//       <img\n//         src={avatar}\n//         alt=\"Аватар пользователя\"\n//         className={styles.avatar}\n//         width=\"150\"\n//         height=\"150\"\n//       />\n//       <p className={styles.name}>{name}</p>\n//       <p className={styles.tag}>@{tag}</p>\n//       <p className={styles.location}>{location}</p>\n//     </div>\n\n//     <ul className={styles.stats}>\n//       <li>\n//         <span className={styles.label}>Followers</span>\n//         <span className={styles.quantity}>{followers}</span>\n//       </li>\n//       <li>\n//         <span className={styles.label}>Views</span>\n//         <span className={styles.quantity}>{views}</span>\n//       </li>\n//       <li>\n//         <span className={styles.label}>Likes</span>\n//         <span className={styles.quantity}>{likes}</span>\n//       </li>\n//     </ul>\n//   </div>\n// );\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n\nexport default Profile;\n","import styled from '@emotion/styled'\r\n\r\nexport const StatList = styled.ul`\r\ndisplay: flex;\r\n`;\r\nexport const Item = styled.li`\r\n   display: flex;\r\n   flex-direction: column;\r\n   text-align: center;\r\n   padding: 10px;\r\n   background-color: ${props => `${props.theme.colors.blue}`};\r\n   width: calc(100% / 5);\r\n   border: 1px solid ${props => `${props.theme.colors.greyBorder}`};\r\n   border-radius: 0.25rem;\r\n`;\r\nexport const Label = styled.span`\r\n color: ${props => `${props.theme.colors.yellow}`};\r\n`;\r\nexport const Percentage = styled.span`\r\n    font-weight: bold;\r\n\r\n    color: ${props => `${props.theme.colors.black}`};\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {StatList, Item, Label, Percentage} from './StatisticsList.styled'\n\nconst StatisticsList = ({ stats }) => (\n  <StatList>\n    {stats.map(({ id, label, percentage }) => (\n      <Item key={id}>\n        <Label>{label}</Label>\n        <Percentage>{percentage}%</Percentage>\n      </Item>\n    ))}\n  </StatList>\n);\n\nStatisticsList.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default StatisticsList;\n","import styled from '@emotion/styled'\r\n\r\nexport const StatisticSection = styled.section`\r\n  margin-top: 20px;\r\n`;\r\nexport const Wrapper = styled.div`\r\n  width: 320px;\r\n  padding-top: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: ${props => `${props.theme.colors.granat}`};\r\n  border-radius: 0.25rem;\r\n`;\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  color: ${props => `${props.theme.colors.grey}`};\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatisticsList from '../StatisticsList/StatisticsList';\nimport {StatisticSection, Wrapper, Title} from './Statistics.styled'\n\nconst Statistics = ({ title, stats }) => (\n  <StatisticSection>\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      <StatisticsList stats={stats} />\n    </Wrapper>\n  </StatisticSection>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled'\r\n\r\nexport const FriendWrapper = styled.div`\r\n  width: 320px;\r\n  padding-top: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 20px;\r\n  background-color: ${props => `${props.theme.colors.granat}`};\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  color: ${props => `${props.theme.colors.grey}`};\r\n`;\r\n\r\nexport const RosterFriends = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n   text-align: center;\r\n   padding: 10px;\r\n   width: calc(100% / 2);\r\n   flex-direction: row;\r\n   align-items: center;\r\n   justify-content: space-around;\r\n   background-color: ${props => `${props.theme.colors.blue}`};\r\n   border: 1px solid ${props => `${props.theme.colors.greyBorder}`};\r\n   border-radius: 0.25rem;\r\n\r\n`;\r\nexport const Status = styled.span` \r\n  display: inline-block;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n\r\n  background-color: ${ props => {\r\n    return props.isOnline ? `${props.theme.colors.green}` : `${props.theme.colors.red}`;\r\n    }};\r\n`;\r\nexport const Avatar = styled.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-weight: bold;\r\n  color: ${props => `${props.theme.colors.black}`};\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n// import styles from './FriendList.module.css';\nimport { FriendWrapper, Title, RosterFriends, Item, Status, Avatar, Name } from './FriendList.styled';\n\nconst FriendList = ({ title, friends }) => (\n  <FriendWrapper>\n    {title && <Title>{title}</Title>}\n\n    <RosterFriends>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <Item key={id}>\n          <Status isOnline={isOnline}></Status>\n          <Avatar src={avatar} alt={name} width=\"48\" />\n          <Name>{name}</Name>\n        </Item>\n      ))}\n    </RosterFriends>\n  </FriendWrapper>\n);\n\nFriendList.defaultProps = {\n  isOnline: false,\n};\nFriendList.propTypes = {\n  title: PropTypes.string,\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.oneOf([false, true]),\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import styled from '@emotion/styled'\r\n\r\nexport const Wrapper = styled.div`\r\n margin-top: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  color: ${props => `${props.theme.colors.grey}`};\r\n`;\r\n\r\nexport const Transaction = styled.table`\r\n  width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\nexport const Topic = styled.th`\r\n  padding: 8px;\r\n  color: ${props => `${props.theme.colors.grey}`};\r\n  background-color:  ${props => `${props.theme.colors.granat}`};\r\n  border: 1px solid ${props => `${props.theme.colors.black}`};\r\n  border-radius: 0.25rem; \r\n`;\r\nexport const Tbody = styled.tbody`\r\n  background-color: ${props => `${props.theme.colors.blue}`};\r\n`;\r\n\r\nexport const Item = styled.tr`\r\n  border: 1px solid ${props => `${props.theme.colors.black}`};\r\n`;\r\nexport const Cell = styled.td`\r\n padding: 8px;\r\n  text-align: center;\r\n  border-radius: 0.25rem;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n// import styles from './TransactionHistory.module.css';\nimport {Wrapper, Title, Transaction, Topic, Tbody, Item, Cell} from './TransactionHistory.styled'\n\nconst TransactionHistory = ({ title, items }) => (\n  <Wrapper>\n    {title && <Title>{title}</Title>}\n    <Transaction>\n      <thead>\n        <tr className=\"topics\">\n          <Topic>Type</Topic>\n          <Topic>Amount</Topic>\n          <Topic>Currency</Topic>\n        </tr>\n      </thead>\n\n      <Tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <Item key={id}>\n            <Cell style={{ color: `rgb(235, 222, 222)` }}>\n              {' '}\n              {type}\n            </Cell>\n            <Cell style={{ color: `rgb(236, 240, 17)` }}>\n              {amount}\n            </Cell>\n            <Cell style={{ color: `rgb(235, 222, 222)` }}>\n              {currency}\n            </Cell>\n          </Item>\n        ))}\n      </Tbody>\n    </Transaction>\n  </Wrapper>\n);\nTransactionHistory.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n// TransactionHistory.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   currency: PropTypes.string.isRequired,\n//   amount: PropTypes.number.isRequired,\n// };\nexport default TransactionHistory;\n","import React from 'react';\nimport Container from '../Container/Container';\nimport Profile from '../SocialProfile/SocialProfile';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../Transaction/TransactionHistory';\nimport user from '../../data/user.json';\nimport statisticalData from '../../data/statistical-data.json';\nimport friends from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList title=\"Gluke's friends\" friends={friends} />\n      <TransactionHistory\n        title=\"Gluke's transaction history\"\n        items={transactions}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { ThemeProvider } from '@emotion/react'\nimport './index.css';\nimport {theme} from './constants/theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App /> \n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","export const theme = {\r\n  colors: {\r\n    blue: \"cadetblue\",\r\n    granat: \"rgb(78, 29, 29)\",\r\n    green: \"rgb(0, 204, 0)\",\r\n    grey: \"rgb(86, 81, 86)\",\r\n    red: \"rgb(230, 0, 0)\",\r\n    black: \"rgb(12, 12, 12)\",\r\n    yellow: \"rgb(236, 240, 17)\",\r\n    blueviolet: \"blueviolet\",\r\n    greyBorder: \"rgb(69, 66, 66)\",\r\n  }\r\n}"],"sourceRoot":""}